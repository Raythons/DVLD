
//////////////////

import * as React from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import Menu from '@mui/material/Menu';
import MenuIcon from '@mui/icons-material/Menu';
import Container from '@mui/material/Container';
import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import Tooltip from '@mui/material/Tooltip';
import MenuItem from '@mui/material/MenuItem';
import CreditCardIcon from '@mui/icons-material/CreditCard';
import ContentCopyIcon from '@mui/icons-material/ContentCopy';
import PanToolIcon from '@mui/icons-material/PanTool';
import ReceiptIcon from '@mui/icons-material/Receipt';
import QuizIcon from '@mui/icons-material/Quiz';
import {  Divider, ListItemIcon } from '@mui/material';
// import { List, ListItem, ListItemText } from '@mui/material';

const pages = ['People', 'Drivers', 'Users'];
const settings = ['Profile', 'Account', 'Dashboard', 'Logout'];

function Header() {
  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);
  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);

  const Applications = {
    title: "Applications",
    subTitles : [
      {
        title: "Driving Licenses Services",
        icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
       
      {
      title: "Manage Applications",
      icon: <ListItemIcon> <ContentCopyIcon fontSize='small'/> </ListItemIcon>
      },
      {
        title: "Detain Licenses",
        icon: <ListItemIcon> <PanToolIcon fontSize='small'/> </ListItemIcon>
      },
      {
        title: "Manage Application Type",
        icon:  <ListItemIcon> <ReceiptIcon fontSize='small'/> </ListItemIcon>
      },
      {
          title: "Manage Test Types",
          icon:  <ListItemIcon> <QuizIcon fontSize='small'/> </ListItemIcon>
      },
      }
    ]
  }

  

  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorElNav(event.currentTarget);
  };
  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorElUser(event.currentTarget);
  };

  const handleCloseNavMenu = () => {
    setAnchorElNav(null);
  };

  const handleCloseUserMenu = () => {
    setAnchorElUser(null);
  };


  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
  const open = Boolean(anchorEl);

  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {
    setAnchorEl(event.currentTarget);
  };
  const handleClose = () => {
    setAnchorEl(null);
  };
  
  return (
    <AppBar position="static">
      <Container maxWidth="xl">
        <Toolbar disableGutters>
          
          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>
            <IconButton
              size="large"
              aria-label="account of current user"
              aria-controls="menu-appbar"
              aria-haspopup="true"
              onClick={handleOpenNavMenu}
              color="inherit"
            >
              <MenuIcon />
            </IconButton>
            <Menu
              id="menu-appbar"
              anchorEl={anchorElNav}
              anchorOrigin={{
                vertical: 'bottom',
                horizontal: 'left',
              }}
              keepMounted
              transformOrigin={{
                vertical: 'top',
                horizontal: 'left',
              }}
              open={Boolean(anchorElNav)}
              onClose={handleCloseNavMenu}
              sx={{
                display: { xs: 'block', md: 'none' },
              }}
            >
              {pages.map((page) => (
                <MenuItem key={page} onClick={handleCloseNavMenu}>
                  <Typography textAlign="center">{page}</Typography>
                </MenuItem>
              ))}
            
            </Menu>
          </Box>

          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>
            
            <Button 
            id="basic-button"
            aria-controls={open ? 'basic-menu' : undefined}
            aria-haspopup="true"
            aria-expanded={open ? 'true' : undefined}
            sx={{ my: 2, color: 'white', display: 'block' }}
            onClick={handleClick}
              >
              Applications
            </Button>
            <Menu  
            sx={{ mt: '45px' }}
              id="menu-appbar"
              anchorEl={anchorEl}
              anchorOrigin={{
                vertical: 'top',
                horizontal: 'right',
              }}
              keepMounted
              transformOrigin={{
                vertical: 'top',
                horizontal: 'right',
              }}
              open={Boolean(anchorEl)}
              onClose={handleClose}>
                  {
                    Applications.subTitles.map((subTitle , i) => (
                      <div key={i}>
                        <MenuItem key={subTitle.title} onClick={handleCloseUserMenu}>
                          {subTitle.icon}
                          {subTitle.title}
                        </MenuItem>
                        {i < Applications.subTitles.length  - 1 ? <Divider  key={i}/> : <></>} 
                      </div>
                    ))
                  }
              </Menu>

              

            {pages.map((page) => (
              <Button
                key={page}
                onClick={handleCloseNavMenu}
                sx={{ my: 2, color: 'white', display: 'block' }}
              >
                {page}
              </Button>
            ))}

          </Box>

          <Box sx={{ flexGrow: 0 }}>
            <Tooltip title="Open settings">
              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                <Avatar alt="Remy Sharp" src="/static/images/avatar/2.jpg" />
              </IconButton>
            </Tooltip>
            <Menu
              sx={{ mt: '45px' }}
              id="menu-appbar"
              anchorEl={anchorElUser}
              anchorOrigin={{
                vertical: 'top',
                horizontal: 'right',
              }}
              keepMounted
              transformOrigin={{
                vertical: 'top',
                horizontal: 'right',
              }}
              open={Boolean(anchorElUser)}
              onClose={handleCloseUserMenu}
            >
              {settings.map((setting) => (
                <MenuItem key={setting} onClick={handleCloseUserMenu}>
                  <Typography textAlign="center">{setting}</Typography>
                </MenuItem>
              ))}
            </Menu>
          </Box>
        </Toolbar>
      </Container>
    </AppBar>
  );
}
export default Header;


 subTitles: [
          {
            title: "Apply for a new license",
            icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
          },
          {
            title: "Apply for a new license",
            icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
          },
          {
            title: "Apply for a new license",
            icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
          },
          {
            title: "Apply for a new license",
            icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
          },
          {
            title: "Apply for a new license",
            icon :  <ListItemIcon> <CreditCardIcon fontSize='small'/> </ListItemIcon>,
          }
        ]
      },